  double d0_alpha = dx_alpha[pp];
  double d1_alpha = dy_alpha[pp];
  double d2_alpha = dz_alpha[pp];
  double d0_beta0 = dx_beta0[pp];
  double d1_beta0 = dy_beta0[pp];
  double d2_beta0 = dz_beta0[pp];
  double d0_beta1 = dx_beta1[pp];
  double d1_beta1 = dy_beta1[pp];
  double d2_beta1 = dz_beta1[pp];
  double d0_beta2 = dx_beta2[pp];
  double d1_beta2 = dy_beta2[pp];
  double d2_beta2 = dz_beta2[pp];
  double d0_B0 = dx_B0[pp];
  double d1_B0 = dy_B0[pp];
  double d2_B0 = dz_B0[pp];
  double d0_B1 = dx_B1[pp];
  double d1_B1 = dy_B1[pp];
  double d2_B1 = dz_B1[pp];
  double d0_B2 = dx_B2[pp];
  double d1_B2 = dy_B2[pp];
  double d2_B2 = dz_B2[pp];
  double d0_chi = dx_chi[pp];
  double d1_chi = dy_chi[pp];
  double d2_chi = dz_chi[pp];
  double d0_Gt0 = dx_Gt0[pp];
  double d1_Gt0 = dy_Gt0[pp];
  double d2_Gt0 = dz_Gt0[pp];
  double d0_Gt1 = dx_Gt1[pp];
  double d1_Gt1 = dy_Gt1[pp];
  double d2_Gt1 = dz_Gt1[pp];
  double d0_Gt2 = dx_Gt2[pp];
  double d1_Gt2 = dy_Gt2[pp];
  double d2_Gt2 = dz_Gt2[pp];
  double d0_K = dx_K[pp];
  double d1_K = dy_K[pp];
  double d2_K = dz_K[pp];
  double d0_gt0 = dx_gt0[pp];
  double d1_gt0 = dy_gt0[pp];
  double d2_gt0 = dz_gt0[pp];
  double d0_gt1 = dx_gt1[pp];
  double d1_gt1 = dy_gt1[pp];
  double d2_gt1 = dz_gt1[pp];
  double d0_gt2 = dx_gt2[pp];
  double d1_gt2 = dy_gt2[pp];
  double d2_gt2 = dz_gt2[pp];
  double d0_gt3 = dx_gt3[pp];
  double d1_gt3 = dy_gt3[pp];
  double d2_gt3 = dz_gt3[pp];
  double d0_gt4 = dx_gt4[pp];
  double d1_gt4 = dy_gt4[pp];
  double d2_gt4 = dz_gt4[pp];
  double d0_gt5 = dx_gt5[pp];
  double d1_gt5 = dy_gt5[pp];
  double d2_gt5 = dz_gt5[pp];
  double d0_At0 = dx_At0[pp];
  double d1_At0 = dy_At0[pp];
  double d2_At0 = dz_At0[pp];
  double d0_At1 = dx_At1[pp];
  double d1_At1 = dy_At1[pp];
  double d2_At1 = dz_At1[pp];
  double d0_At2 = dx_At2[pp];
  double d1_At2 = dy_At2[pp];
  double d2_At2 = dz_At2[pp];
  double d0_At3 = dx_At3[pp];
  double d1_At3 = dy_At3[pp];
  double d2_At3 = dz_At3[pp];
  double d0_At4 = dx_At4[pp];
  double d1_At4 = dy_At4[pp];
  double d2_At4 = dz_At4[pp];
  double d0_At5 = dx_At5[pp];
  double d1_At5 = dy_At5[pp];
  double d2_At5 = dz_At5[pp];
  double d00_gt0 = dxx_gt0[pp];
  double d01_gt0 = dxy_gt0[pp];
  double d02_gt0 = dxz_gt0[pp];
  double d11_gt0 = dyy_gt0[pp];
  double d12_gt0 = dyz_gt0[pp];
  double d22_gt0 = dzz_gt0[pp];
  double d00_gt1 = dxx_gt1[pp];
  double d01_gt1 = dxy_gt1[pp];
  double d02_gt1 = dxz_gt1[pp];
  double d11_gt1 = dyy_gt1[pp];
  double d12_gt1 = dyz_gt1[pp];
  double d22_gt1 = dzz_gt1[pp];
  double d00_gt2 = dxx_gt2[pp];
  double d01_gt2 = dxy_gt2[pp];
  double d02_gt2 = dxz_gt2[pp];
  double d11_gt2 = dyy_gt2[pp];
  double d12_gt2 = dyz_gt2[pp];
  double d22_gt2 = dzz_gt2[pp];
  double d00_gt3 = dxx_gt3[pp];
  double d01_gt3 = dxy_gt3[pp];
  double d02_gt3 = dxz_gt3[pp];
  double d11_gt3 = dyy_gt3[pp];
  double d12_gt3 = dyz_gt3[pp];
  double d22_gt3 = dzz_gt3[pp];
  double d00_gt4 = dxx_gt4[pp];
  double d01_gt4 = dxy_gt4[pp];
  double d02_gt4 = dxz_gt4[pp];
  double d11_gt4 = dyy_gt4[pp];
  double d12_gt4 = dyz_gt4[pp];
  double d22_gt4 = dzz_gt4[pp];
  double d00_gt5 = dxx_gt5[pp];
  double d01_gt5 = dxy_gt5[pp];
  double d02_gt5 = dxz_gt5[pp];
  double d11_gt5 = dyy_gt5[pp];
  double d12_gt5 = dyz_gt5[pp];
  double d22_gt5 = dzz_gt5[pp];
  double d00_chi = dxx_chi[pp];
  double d01_chi = dxy_chi[pp];
  double d02_chi = dxz_chi[pp];
  double d11_chi = dyy_chi[pp];
  double d12_chi = dyz_chi[pp];
  double d22_chi = dzz_chi[pp];
  double d00_alpha = dxx_alpha[pp];
  double d01_alpha = dxy_alpha[pp];
  double d02_alpha = dxz_alpha[pp];
  double d11_alpha = dyy_alpha[pp];
  double d12_alpha = dyz_alpha[pp];
  double d22_alpha = dzz_alpha[pp];
  double d00_beta0 = dxx_beta0[pp];
  double d01_beta0 = dxy_beta0[pp];
  double d02_beta0 = dxz_beta0[pp];
  double d11_beta0 = dyy_beta0[pp];
  double d12_beta0 = dyz_beta0[pp];
  double d22_beta0 = dzz_beta0[pp];
  double d00_beta1 = dxx_beta1[pp];
  double d01_beta1 = dxy_beta1[pp];
  double d02_beta1 = dxz_beta1[pp];
  double d11_beta1 = dyy_beta1[pp];
  double d12_beta1 = dyz_beta1[pp];
  double d22_beta1 = dzz_beta1[pp];
  double d00_beta2 = dxx_beta2[pp];
  double d01_beta2 = dxy_beta2[pp];
  double d02_beta2 = dxz_beta2[pp];
  double d11_beta2 = dyy_beta2[pp];
  double d12_beta2 = dyz_beta2[pp];
  double d22_beta2 = dzz_beta2[pp];
  double ad0_gt0 = adx_gt0[pp];
  double ad1_gt0 = ady_gt0[pp];
  double ad2_gt0 = adz_gt0[pp];
  double ad0_gt1 = adx_gt1[pp];
  double ad1_gt1 = ady_gt1[pp];
  double ad2_gt1 = adz_gt1[pp];
  double ad0_gt2 = adx_gt2[pp];
  double ad1_gt2 = ady_gt2[pp];
  double ad2_gt2 = adz_gt2[pp];
  double ad0_gt3 = adx_gt3[pp];
  double ad1_gt3 = ady_gt3[pp];
  double ad2_gt3 = adz_gt3[pp];
  double ad0_gt4 = adx_gt4[pp];
  double ad1_gt4 = ady_gt4[pp];
  double ad2_gt4 = adz_gt4[pp];
  double ad0_gt5 = adx_gt5[pp];
  double ad1_gt5 = ady_gt5[pp];
  double ad2_gt5 = adz_gt5[pp];
  double ad0_At0 = adx_At0[pp];
  double ad1_At0 = ady_At0[pp];
  double ad2_At0 = adz_At0[pp];
  double ad0_At1 = adx_At1[pp];
  double ad1_At1 = ady_At1[pp];
  double ad2_At1 = adz_At1[pp];
  double ad0_At2 = adx_At2[pp];
  double ad1_At2 = ady_At2[pp];
  double ad2_At2 = adz_At2[pp];
  double ad0_At3 = adx_At3[pp];
  double ad1_At3 = ady_At3[pp];
  double ad2_At3 = adz_At3[pp];
  double ad0_At4 = adx_At4[pp];
  double ad1_At4 = ady_At4[pp];
  double ad2_At4 = adz_At4[pp];
  double ad0_At5 = adx_At5[pp];
  double ad1_At5 = ady_At5[pp];
  double ad2_At5 = adz_At5[pp];
  double ad0_alpha = adx_alpha[pp];
  double ad1_alpha = ady_alpha[pp];
  double ad2_alpha = adz_alpha[pp];
  double ad0_beta0 = adx_beta0[pp];
  double ad1_beta0 = ady_beta0[pp];
  double ad2_beta0 = adz_beta0[pp];
  double ad0_beta1 = adx_beta1[pp];
  double ad1_beta1 = ady_beta1[pp];
  double ad2_beta1 = adz_beta1[pp];
  double ad0_beta2 = adx_beta2[pp];
  double ad1_beta2 = ady_beta2[pp];
  double ad2_beta2 = adz_beta2[pp];
  double ad0_chi = adx_chi[pp];
  double ad1_chi = ady_chi[pp];
  double ad2_chi = adz_chi[pp];
  double ad0_Gt0 = adx_Gt0[pp];
  double ad1_Gt0 = ady_Gt0[pp];
  double ad2_Gt0 = adz_Gt0[pp];
  double ad0_Gt1 = adx_Gt1[pp];
  double ad1_Gt1 = ady_Gt1[pp];
  double ad2_Gt1 = adz_Gt1[pp];
  double ad0_Gt2 = adx_Gt2[pp];
  double ad1_Gt2 = ady_Gt2[pp];
  double ad2_Gt2 = adz_Gt2[pp];
  double ad0_K = adx_K[pp];
  double ad1_K = ady_K[pp];
  double ad2_K = adz_K[pp];
  double ad0_B0 = adx_B0[pp];
  double ad1_B0 = ady_B0[pp];
  double ad2_B0 = adz_B0[pp];
  double ad0_B1 = adx_B1[pp];
  double ad1_B1 = ady_B1[pp];
  double ad2_B1 = adz_B1[pp];
  double ad0_B2 = adx_B2[pp];
  double ad1_B2 = ady_B2[pp];
  double ad2_B2 = adz_B2[pp];
